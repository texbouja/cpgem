@use 'sass:color';
@use 'sass:string';
@use 'sass:list';
@use '../abstracts/variables' as v;
@use '../abstracts/breakpoints' as bp;
@use '../abstracts/mixins' as mx;
@use '../abstracts/placeholders';

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}
@mixin border-radius($radius...) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}
@mixin carte-border($whidth: 2px) {
  border: $whidth solid var(--carte-border-trasparency);
}

// Variables pour la numérotation
$carte-counters: (
  'theorem': 0,
  'definition': 0,
  'exercise': 0
);

// Liste des types de cartes qui doivent être numérotées par défaut
$carte-numbered-types: ('theorem', 'definition', 'exercise');

// Mixin pour créer les différents types de cartes
@mixin carte($type, $color: $type, $name: null, $icon: null, $numbered: null) {
  // Détermine si le type doit être numéroté par défaut
  $should-number: if(
    $numbered != false,
    $numbered,
    list.index($carte-numbered-types, $type) != null
  );

  // Utilise le nom personnalisé s'il est fourni, sinon capitalise le type
  $display-name: if($name != null, $name, capitalize($type));

  .carte-#{$type} {
    display: flex;
    flex-direction: column;
    position: relative;
    padding: 2.8rem 1rem 1rem 1rem;
    margin: 1.5rem 0;
    line-height: 1.5;
    background-color: var(--carte-#{$color}-bg);
    @include border-radius(5px 5px 15px 15px);
    @include carte-border(2px);
    overflow: hidden;

    // Counter pour la numérotation
    @if $should-number {
      counter-increment: carte-#{$type};
    }

    // Style pour le premier élément s'il s'agit d'un titre
    > h2:first-child,
    > h3:first-child,
    > h4:first-child {
      display: inline-block;
      position: absolute;
      top: 0;
      padding: 2px 1.5rem 4px 1.5rem;
      margin: 1px;
      min-width: 33%;
      font-weight: 400;
      color: var(--text-dark);
      background: var(--carte-#{$color});
      @include border-radius(0 0px 15px 15px);
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
      background-image: -webkit-gradient(
        linear,
        left top,
        left bottom,
        from(#0000),
        to(#0005)
      );

      // Ajouter la numérotation si activée et si la classe 'nonumber' n'est pas présente
      @if $should-number {
        &::before {
          content: counter(carte-#{$type}) ' #{$display-name} ';
        }
      } @else {
        &::before {
          content: '#{$display-name}';
        }
      }

      // Ne pas ajouter la numérotation si la classe 'nonumber' est présente
      .nonumber > &,
      &.nonumber {
        > h2:first-child,
        > h3:first-child,
        > h4:first-child {
          &::before {
            content: '#{$display-name}';
          }
        }
      }

      // Ajouter une icône si spécifiée
      @if $icon != null {
        &::before {
          font-family: 'Font Awesome 6 Free';
          font-weight: 900;
          color: var(--site-title-color);
          left: 1rem;
          top: 50%;
          transform: translateY(-50%);

          @if $should-number {
            content: counter(carte-#{$type}) + ' ';
          } @else {
            content: $icon + ' ';
          }
        }

        .nonumber > &,
        &.nonumber {
          > h2:first-child,
          > h3:first-child,
          > h4:first-child {
            &::before {
              content: $icon + ' ' + '#{$display-name}';
            }
          }
        }
      }
    }

    // Style pour les éléments collapsibles
    &.collapsible {
      > h2:first-child,
      > h3:first-child,
      > h4:first-child {
        cursor: pointer;
        position: absolute;
        padding-right: 3rem;

        &::after {
          font-family: 'Font Awesome 6 Free';
          font-weight: 900;
          content: '\f077';
          position: absolute;
          right: 10px;
          top: 50%;
          transform: translateY(-50%);
          font-size: 0.8em;
          transition: transform 0.3s ease;
        }
      }

      &.collapsed {
        > h2:first-child,
        > h3:first-child,
        > h4:first-child {
          &::after {
            transform: translateY(-50%) rotate(180deg);
          }
        }

        > *:not(h2):not(h3):not(h4) {
          display: none;
        }
      }
    }
  }
}

// Fonction pour capitaliser la première lettre avec string.to-upper-case
@function capitalize($string) {
  @return string.to-upper-case(string.slice($string, 1, 1)) +
    string.slice($string, 2);
}

// Initialisation des compteurs
body {
  @each $type, $count in $carte-counters {
    counter-reset: carte-#{$type};
  }
}

// Définitions des différents types de cartes avec noms personnalisés en français
@include carte('theorem', $name: 'Théorème', $numbered: true);
@include carte('definition', $name: 'Définition', $numbered: true);
@include carte('exercise', $name: 'Exercice', $numbered: true);
@include carte('note', $numbered: false);
@include carte(
  'objectif',
  $color: generic,
  $name: 'Objectif',
  $numbered: false,
  $icon: '\f140'
);
@include carte(
  'prerequis',
  $color: generic,
  $name: 'Prérequis',
  $numbered: false,
  $icon: '\f5da'
);
@include carte(
  'links',
  $color: generic,
  $name: 'Liens',
  $numbered: false,
  $icon: '\f0c1'
);
@include carte('generic', $name: '', $color: generic, $numbered: false);

//   Ancien

@include bp.lte(bp.get(sm)) {
  .content {
    > [class^='carte-'] {
      @include mx.ml-mr(-1rem);
      padding: 0.75rem;
      padding-top: 3rem;
      border: none;
      max-width: none;
      border-radius: 0;
      border-bottom: 2px solid var(--carte-border-trasparency);

      > h2:first-child,
      > h3:first-child,
      > h4:first-child {
        position: absolute;
        top: 5px;
        min-width: 66%;
        padding-right: 2.5rem;
        text-align: right;
        margin: 0 -0.75rem;
        @include border-radius(0 0.8em 0.8em 0);
      }
    }
  }
}

.two-column-list {
  // Configuration desktop
  column-count: 2; // Deux colonnes
  column-gap: 2rem; // Espace entre colonnes
  padding-left: 1rem;

  // Style des éléments
  li {
    break-inside: avoid-column; // Bloque la coupure d'items
    margin-bottom: 0.75rem;
  }

  // Media query pour mobile
  @media (max-width: 768px) {
    column-count: 1; // Une seule colonne
    padding-left: 1.5rem; // Alignement standard des listes
  }
}

.concours-view {
  margin: 0;
}

.concours-titlepage {
  font-weight: 700;
  padding: 3.5rem 1.5rem 6rem 1.5rem;
  margin: 0;
  color: var(--concours-color);
  background-image: linear-gradient(
    to bottom,
    var(--main-bg),
    var(--card-bg),
    var(--card-bg),
    var(--main-bg)
  );
}
.concours-description {
  color: var(--text-color) !important;
  padding: 0 1.5rem 4rem 1.5rem;
  margin-top: -6rem;
}

@include bp.lte(bp.get(sm)) {
  .concours-titlepage {
    margin: 0 -1.5rem;
  }
  .concours-description {
    margin: -6rem 0 0 -1.5rem;
  }
}

[concours-window] {
  display: flex;
  flex-direction: column;
  position: sticky !important;
  top: calc(v.$topbar-height + 2rem);
  padding-bottom: 0.75rem;
  max-height: calc(100vh - v.$topbar-height - 2rem);
  margin: 1.5rem 0;
  line-height: 1.5;
  position: relative;
  border-radius: 8px;
  background-color: var(--concours-bg);
  border: 2px solid var(--concours-color);
  box-shadow: 0 2px 18px 0 rgba(0, 0, 0, 0.2);

  > :first-child {
    z-index: 998;
    margin: 0;
  }

  > :not(:first-child) {
    overflow-y: auto;
    flex-grow: 1;
    &::-webkit-scrollbar {
      display: none;
    }
  }
}

@include bp.lte(bp.get(sm)) {
  .content {
    .concours-view > [concours-window],
    > [concours-window] {
      margin: 0 -1.5rem;
      border-radius: 0;
    }
  }
}

.concours-tabs-container {
  flex-grow: 1;
  overflow-x: auto;
  @include border-radius(0 0px 15px 15px);
  background-color: var(--concours-color);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
  margin-left: 10px;
  background-image: -webkit-gradient(
    linear,
    left top,
    left bottom,
    from(#0000),
    to(#0005)
  );
}

.concours-tabs {
  display: flex;
  flex-wrap: wrap;
  overflow-x: auto;
}

.concours-tab {
  color: var(--text-muted-dark);
  background-color: transparent;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 10px 1rem;
  // transition: 0.3s;
  font-weight: 500;
  white-space: nowrap;
}

.concours-tab:hover {
  background-color: var(--hover-bg);
}

.concours-tab.active {
  color: var(--text-dark);
  border-bottom: 3px solid var(--link-color);
}

/* Style pour le contenu des onglets */
.tab-content {
  display: none;
  padding: 15px;
  width: 100%;
}

// Entête de la fenêtre concours

.view-switch {
  position: relative;
  margin: 0 5px 0 5px; /* Marge à droite au lieu de la gauche */
}

.view-dropdown {
  display: none;
  position: absolute;
  min-width: 160px;
  right: 0; /* Aligné à droite au lieu de la gauche */
  top: 100%;
  z-index: 1;
  background-color: var(--concours-bg);
  box-shadow: 0px 8px 15px 0px rgba(0, 0, 0, 0.2);
  border-radius: 5px;
}

.view-switch:hover .view-dropdown {
  display: block;
}

.view-option {
  color: var(--text-color);
  padding: 12px 15px;
  text-decoration: none;
  display: block;
  background: none;
  border: none;
  width: 100%;
  text-align: left;
  cursor: pointer;

  &:hover {
    background-color: var(--mask-bg);
  }

  &.active {
    color: var(--text-dark) !important;
    background: var(--concours-color);
    font-weight: bold;
  }
}

.view-button {
  background-color: transparent;
  border: none;
  color: var(--text-color);
  font-size: 1.2rem;
  cursor: pointer;
  padding: 10px;
  border-radius: 5px;

  &:hover {
    background-color: var(--mask-bg);
  }
}

.session-concours-title {
  margin-top: 1.5rem;
  margin-bottom: 1rem;
  color: var(--link-color);
  border-bottom: 1px solid var(--concours-color);
  padding-bottom: 5px;
}

.concours-header {
  font-family: 'Roboto Condensed', sans-serif;
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin: 0;
  padding: 0;
}

.filter-switch {
  position: relative;
  margin: 0 -5px 0 5px;
}

.filter-dropdown {
  display: none;
  position: absolute;
  min-width: 280px;
  top: 100%;
  left: 0;
  max-height: 400px;
  overflow-y: auto;
  z-index: 1;
  background-color: var(--concours-bg);
  box-shadow: 0px 8px 15px 0px rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  line-height: 1.3;
}

.filter-switch:hover .filter-dropdown {
  display: block;
}

.filter-option {
  color: var(--text-color);
  padding: 12px 15px;
  text-decoration: none;
  display: block;
  background: none;
  border: none;
  width: 100%;
  text-align: left;
  cursor: pointer;

  &:hover {
    background-color: var(--mask-bg);
  }

  &.active {
    color: var(--text-dark) !important;
    background: var(--concours-color);
    font-weight: bold;
  }
}

.filter-button {
  background-color: transparent;
  border: none;
  color: var(--text-color);
  font-size: 1.2rem;
  cursor: pointer;
  padding: 10px;
  border-radius: 5px;

  &:hover {
    background-color: var(--mask-bg);
  }
}

// Styles pour les états de chargement et aucun résultat
.loading-indicator,
.no-results {
  padding: 30px;
  text-align: center;
  font-style: italic;
  color: var(--text-muted-color);
}

// #switchViewBtn {
//   background-color: transparent;
//   border: none;
//   color: var(--text-color);
//   font-size: 1.2rem;
//   cursor: pointer;
//   padding: 10px;
//   border-radius: 5px;
//   &:hover {
//     background-color: rgba(255, 255, 255, 0.1);
//   }
// }

.sujet-view {
  padding: 0 5px;
  margin: 1rem 5px 0 5px;
  background: var(--carte-background-shadow);
  border-radius: 8px;
  border: 1px solid var(--carte-border-trasparency);

  .sujet-view:last-child {
    border-bottom: none;
    margin-bottom: 0;
  }

  .sujet-title {
    position: relative;
    margin: 1rem 0 0.5rem 2.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    line-height: 1.35;

    &::before {
      font-family: 'Font Awesome 5 Free';
      font-weight: 900;
      font-size: 1.5rem;
      content: '\f5a2';
      color: var(--concours-color);
      position: absolute;
      left: -2rem;
      top: 0.2em;
      line-height: 1;
    }

    h3 {
      margin: 0;
    }

    .sujet-meta {
      font-family: 'Roboto Condensed', sans-serif;
      display: flex;
      flex-wrap: wrap;
      gap: 0.75rem;
      margin: 0.5rem 0 0.75rem 0;
      font-size: 0.75rem;
    }

    .meta-item {
      position: relative;
      padding-left: 1.25rem;
    }

    .meta-item::before {
      font-family: 'Font Awesome 5 Free';
      font-weight: 900;
      position: absolute;
      left: 0;
      color: var(--concours-color);
    }

    .meta-concours::before {
      content: '\f5a2';
    }
    .meta-filiere::before {
      content: '\f501';
    }
    .meta-session::before {
      content: '\f073';
    }
    .meta-epreuve::before {
      content: '\f573';
    }
    .meta-duree::before {
      content: '\f017';
    }
    .meta-difficulte::before {
      content: '\f06a';
    }
  }

  .sujet-objectif {
    margin: 0.5rem 0.75rem;
    font-size: 1.1rem;
    line-height: 1.4;
  }
}
@include bp.lte(bp.get(sm)) {
  .content {
    .sujet-view {
      margin: 0.5rem 12px;
      border-radius: 5px;
    }
  }
}

.prerequis-list {
  display: flex;
  flex-wrap: wrap;
  padding: 0.3rem 0;
  margin: 0.5rem 0;
  gap: 0 0.4rem;
  font-size: 0.95rem;
  position: relative;
  padding-left: 3rem;
  align-items: center;

  &::before {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    content: '\f02c'; // fa-tag
    font-size: 1.75em;
    color: var(--concours-color);
    position: absolute;
    left: 0.75rem;
    top: 1.25em;
    transform: translateY(-100%);
    line-height: 1;
  }
  .prerequis-item {
    font-family: 'Roboto Condensed', sans-serif;
    display: inline-block;
    position: relative;
    margin-right: 0.55rem;
  }

  .prerequis-item:not(:last-child)::after {
    content: '•';
    font-size: 2em;
    position: absolute;
    right: -0.75rem;
    color: var(--text-muted-color);
    line-height: 0.85;
  }
}
.prerequis-post-list {
  display: flex;
  flex-wrap: wrap;
  margin: 0;
  gap: 0 1rem;
  position: relative;
  padding-left: 1rem;
  align-items: center;
  font-size: 0.95rem;

  .prerequis-item {
    font-family: 'Roboto Condensed', sans-serif;
    display: inline-block;
    position: relative;
    margin-top: 0.75rem;
    &::before {
      content: '';
      display: inline-block;
      position: relative;
      border-radius: 50%;
      width: 10px;
      height: 10px;
      left: -0.5rem;
      border: 2px solid;
      background-color: var(--timeline-year-dot-color);
      border-color: var(--timeline-node-bg);
      box-shadow: 0 0 2px 0 #c2c6cc;
      z-index: 1;
    }
  }
}
.download-concours {
  padding: 0.4rem 0 0.8rem 0;
  margin: 0.5rem 0;
}
.download-list {
  display: flex;
  flex-wrap: wrap;
  gap: 0.4rem 0.4rem;
  font-size: 0.95rem;
  position: relative;
  padding-left: 3rem;
  align-items: center;
  &::before {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    content: '\f019'; // fa-download
    font-size: 1.75em;
    color: var(--concours-color);
    position: absolute;
    left: 0.5rem;
    top: 0.75em;
    transform: translateY(-75%);
    line-height: 1;
  }

  .download-item {
    font-family: 'Roboto Condensed', sans-serif;
    position: relative;
    padding-left: 1.5rem;
    padding-right: 2rem;
  }

  .download-item::before {
    font-family: 'Font Awesome 5 Free';
    font-weight: 900;
    position: absolute;
    font-size: 1rem;
    color: var(--text-muted-color);
    left: 0;
  }

  .download-original::before {
    content: '\f1c1';
  }
  .download-report::before {
    content: '\e0e3';
  }
  .download-print::before {
    content: '\f02f';
  }
  .download-tablet::before {
    content: '\f3fa';
  }
  .download-phone::before {
    content: '\f3cd';
  }
  .download-web::before {
    content: '\f0ac';
  }
}
